# 1793: 타일링
# 특이사항: 다국어(영어)(한국어 번역)
# 출처: ACPC 2000 A번
# 알고리즘 분류: 다이나믹 프로그래밍/임의 정밀도/큰 수 연산

# 1. 0부터 250까지의 인덱스에 대한 정보를 저장하는 dp 테이블 생성
# 1-1. dp[0] = 1
# 1-2. dp[1] = 1(2×1로 채우는 방법 1개)
# 1-3. dp[2] = 3(2×1로 채우는 방법 2개 + 2×2로 채우는 방법 1개)
# 1-4. 점화식: dp[i] = dp[i - 1] + 2 * dp[i - 2]
# 2. 테스트 케이스마다 정수 n 입력 (0 ≤ n ≤ 250)
# 2-1. 입력이 없으면 프로그램 종료
# 3. dp[n] 출력

dp = [0] * 251
dp[0] = 1
dp[1] = 1
dp[2] = 3
for i in range(3, 251):
    dp[i] = dp[i - 1] + 2 * dp[i - 2]

while True:
    try:
        n = int(input())
        print(dp[n])
    except:
        break
