# 31263: 대한민국을 지키는 가장 긴 힘
# 특이사항: 서브태스크
# 유의사항: 공군의 복무 일수는 1년 9개월이므로 남은 복무일 수는 1 이상 641 이하입니다.
# 알고리즘 분류: 다이나믹 프로그래밍/그리디 알고리즘

# 1. 전역일 페이퍼에 적힌 수의 자릿수 N 입력
# 2. 전역일 페이퍼에 적힌, 길이 N의 정수 S 입력

N = int(input())
S = input()

# 동적 프로그래밍을 위한 메모이제이션 배열 dp
# dp[i]는 S의 i번째 자리까지 고려했을 때의 최소 군인 수
dp = [float('inf')] * (N + 1)
dp[0] = 0  # 시작점의 최소 군인 수는 0

for i in range(1, N + 1):
    for j in range(1, 4):  # 1자리, 2자리, 3자리 숫자를 고려
        if i - j >= 0:
            num = int(S[i - j:i])
            # 숫자가 1 이상 641 이하인 경우에만 고려
            # 또한, 슬라이싱했을 때 숫자가 0으로 시작하는 경우도 고려하지 않아야 함
            if S[i - j] != '0' and num > 0 and num <= 641:
                dp[i] = min(dp[i], dp[i - j] + 1)

print(dp[N])
