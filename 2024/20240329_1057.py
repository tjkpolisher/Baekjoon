# 1057: 토너먼트
# 유의사항: 김지민과 임한수는 서로 대결하기 전까지 항상 이긴다고 가정
# 알고리즘 분류: 수학/브루트포스 알고리즘

# 1. 참가자의 수 N, 1라운드에서의 김지민/임한수의 번호 n1, n2 입력
# 1-1. n1 < n2가 아닌 경우 무한루프에서 탈출하지 못하므로, 순서를 바꿔줘야 함(이거 중요)
# 2. 두 번호가 홀수, 짝수 순으로 인접한 번호일 경우 첫 번째 라운드에서 붙으므로 결과 출력
# 3. [반복문] 두 번째 라운드부터는 이전 라운드 승자에게 조 순서대로 번호를 다시 부여
# 3-1. 기존 n1과 n2에 대하여 홀수는 2로 나눈 몫에 1을 더하고, 짝수는 2로 나눈 몫을 그대로 적용
# 4. 3-1을 다루는 함수를 반복 적용하면서 2의 조건을 만족할 때까지 카운터에 1을 더함
# 5. 서로 대결하지 않을 경우 -1, 만나는 경우는 라운드 번호 카운터를 출력


def next_number(n):
    return n // 2 + 1 if n % 2 == 1 else n // 2


N, n1, n2 = map(int, input().split())
if n1 > n2:
    n1, n2 = n2, n1
cnt = 1  # 몇 라운드에서 만나는지를 나타내는 카운터(1라운드부터 시작)
while True:
    if n2 - n1 == 1 and n2 % 2 == 0:
        break
    cnt += 1
    N //= 2
    n1, n2 = next_number(n1), next_number(n2)

print(cnt)
